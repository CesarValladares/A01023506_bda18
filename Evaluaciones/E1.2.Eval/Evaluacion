-----1
db.grades.aggregate({$group: {_id: '$student_id'}},{$group: {_id: "alumnos",count: {$sum: 1}}})

-----2
db.grades.aggregate({$group: {_id: '$class_id'}},{$group: {_id: "cursos" ,count: {$sum: 1}}})

-----3
var map1 = function(){
	this.scores.forEach((value)=>{emit(this.student_id, value.score)});
};

var reduce1 = function(name, value){
	var n = Array.avg(value);
	return n;
};

db.grades.mapReduce(map1,reduce1,{out:"res1"})
db.res1.find()

----4

var map2 = function(){
	this.scores.forEach((value)=>{emit({student:this.student_id,class_id:this.class_id}, value.score)});
};
var reduce2 = function(name, value){
	var n = Array.avg(value); 
	return n;
};
db.grades.mapReduce(map2,reduce2,{out:"res2"})
db.res2.find().sort({value: 1}).limit(1)

----5

db.grades.aggregate([{$unwind:"$scores"},{$group:{"_id":"$class_id","count":{$sum:1}}},{$sort : {count : -1}}, {$limit :1 }])

----6

db.grades.aggregate([{ $group: { _id: "$student_id", count: { $sum: 1 } } },{$sort : {count : -1}}, {$limit :1 }])

----7

var map3 = function(){
	this.scores.forEach((value)=>{emit(this.class_id, value.score)});
};
var reduce3 = function(name, value){
	var n = Array.avg(value); 
	return n;
};
db.grades.mapReduce(map3,reduce2,{out:"res3"})
db.res3.find().sort({value: 1}).limit(1)
